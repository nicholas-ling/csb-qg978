{"version":3,"sources":["makeData.js","App.js","index.js"],"names":["range","len","arr","i","push","formatter","Intl","NumberFormat","style","currency","newPerson","step","total","mortgageCalculator","mortgageJs","createMortgageCalculator","totalPrice","downPayment","interestRate","months","taxRate","insuranceRate","mortgageInsuranceRate","mortgageInsuranceEnabled","mortgageInsuranceThreshold","additionalPrincipalPayment","payment","calculatePayment","console","log","price","format","down","mortgage","Styles","styled","div","withConfig","displayName","componentId","IndeterminateCheckbox","React","forwardRef","_ref","ref","indeterminate","rest","Object","objectWithoutProperties","defaultRef","useRef","resolvedRef","useEffect","current","react_default","a","createElement","Fragment","assign","type","Table","_ref2","columns","data","_useTable","useTable","useRowSelect","hooks","visibleColumns","id","Header","_ref3","getToggleAllRowsSelectedProps","Cell","_ref4","row","getToggleRowSelectedProps","concat","toConsumableArray","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","selectedFlatRows","selectedRowIds","state","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","slice","getRowProps","cells","cell","getCellProps","keys","length","JSON","stringify","selectedFlatRows[].original","d","original","App","useMemo","accessor","_len","arguments","lens","Array","_key","depth","undefined","objectSpread","makeDataLevel","makeData","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6aa9d7ee.chunk.js","sourcesContent":["import mortgageJs from \"mortgage-js\";\n\nconst range = (len) => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nconst newPerson = (step) => {\n  const total = 500000 + 10000 * step;\n  let mortgageCalculator = mortgageJs.createMortgageCalculator();\n  mortgageCalculator.totalPrice = total;\n  mortgageCalculator.downPayment = total * 0.2;\n  mortgageCalculator.interestRate = 0.0128;\n  mortgageCalculator.months = 360;\n  mortgageCalculator.taxRate = 0;\n  mortgageCalculator.insuranceRate = 0.0013;\n  mortgageCalculator.mortgageInsuranceRate = 0;\n  mortgageCalculator.mortgageInsuranceEnabled = false;\n  mortgageCalculator.mortgageInsuranceThreshold = 0.1;\n  mortgageCalculator.additionalPrincipalPayment = 0;\n  let payment = mortgageCalculator.calculatePayment();\n  console.log(payment);\n  return {\n    price: formatter.format(total),\n    down: formatter.format(mortgageCalculator.downPayment),\n    mortgage: 1\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    return range(len).map((d) => {\n      return {\n        ...newPerson(d)\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport makeData from \"./makeData\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nconst IndeterminateCheckbox = React.forwardRef(\n  ({ indeterminate, ...rest }, ref) => {\n    const defaultRef = React.useRef();\n    const resolvedRef = ref || defaultRef;\n\n    React.useEffect(() => {\n      resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n      <>\n        <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n      </>\n    );\n  }\n);\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    selectedFlatRows,\n    state: { selectedRowIds }\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useRowSelect,\n    (hooks) => {\n      hooks.visibleColumns.push((columns) => [\n        // Let's make a column for selection\n        {\n          id: \"selection\",\n          // The header can use the table's getToggleAllRowsSelectedProps method\n          // to render a checkbox\n          Header: ({ getToggleAllRowsSelectedProps }) => (\n            <div>\n              <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n            </div>\n          ),\n          // The cell can use the individual row's getToggleRowSelectedProps method\n          // to the render a checkbox\n          Cell: ({ row }) => (\n            <div>\n              <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n            </div>\n          )\n        },\n        ...columns\n      ]);\n    }\n  );\n\n  // Render the UI for your table\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.slice(0, 50).map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n      <pre>\n        <code>\n          {JSON.stringify(\n            {\n              selectedRowIds: selectedRowIds,\n              \"selectedFlatRows[].original\": selectedFlatRows.map(\n                (d) => d.original\n              )\n            },\n            null,\n            2\n          )}\n        </code>\n      </pre>\n    </>\n  );\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"房价\",\n        accessor: \"price\"\n      },\n      {\n        Header: \"首付\",\n        accessor: \"down\"\n      },\n      {\n        Header: \"每月支出\",\n        columns: [\n          {\n            Header: \"贷款月供\",\n            accessor: \"mortgage\"\n          },\n          {\n            Header: \"维护费\",\n            accessor: \"management\"\n          },\n          {\n            Header: \"地税\",\n            accessor: \"tax\"\n          },\n          {\n            Header: \"房东保险\",\n            accessor: \"insurance\"\n          }\n        ]\n      },\n      {\n        Header: \"每月收入\",\n        columns: [\n          {\n            Header: \"租金\",\n            accessor: \"rental\"\n          }\n        ]\n      },\n      {\n        Header: \"财务分析\",\n        columns: [\n          {\n            Header: \"每月现金流\",\n            accessor: \"cash\"\n          },\n          {\n            Header: \"每月收益流\",\n            accessor: \"profit\"\n          },\n          {\n            Header: \"投资回报率\",\n            accessor: \"roi\"\n          }\n        ]\n      }\n    ],\n    []\n  );\n\n  const data = React.useMemo(() => makeData(40), []);\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}